<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.semi02.mapper.UploadCommMapper">
	
	<!-- 댓글 개수 -->
	<select id="selectCommentCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM UPLOAD_COMM
		 WHERE UPLOAD_NO = #{uploadNo} AND STATE = '1'
	</select>
	
	<!-- 댓글 삽입 -->
	<insert id="insertComment" parameterType="UploadCommDTO">
		INSERT INTO UPLOAD_COMM
			(UPLOAD_COMM_NO, UPLOAD_NO, USER_IP, COMM_CONTENT, STATE, DEPTH, GROUP_NO, COMM_DATE)
		VALUES
			(UPLOAD_COMMENTS_SEQ.NEXTVAL, #{uploadNo}, #{commUserIp},#{commContent}, 1, 0, COMMENTS_SEQ.CURRVAL, SYSDATE)
	</insert>
	
	<!-- 댓글 리스트 -->
	<select id="selectCommentList" parameterType="Map" resultType="UploadCommDTO"> <!-- DEPTH 기준 오름차순(댓글/대댓글), GROUP_NO의 내림차순(최신 댓글이 위로 오도록) 만약 대댓글끼리도 하고싶으면 CREATE_DATE 이용하면 됨 -->
		SELECT A.ROW_NUM, A.UPLOAD_COMM_NO, A.UPLOAD_NO, A.COMM_CONTENT, A.STATE, A.DEPTH, A.GROUP_NO, A.COMM_DATE
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY GROUP_NO DESC, DEPTH ASC, COMM_DATE DESC) AS ROW_NUM, UPLOAD_COMM_NO, UPLOAD_NO, COMM_CONTENT, STATE, DEPTH, GROUP_NO, COMM_DATE
		          FROM UPLOAD_COMM
		         WHERE UPLOAD_NO = #{uploadNo}) A LEFT OUTER JOIN USERS U
		 	ON A.ID = U.ID
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 댓글 삭제(update를 통한) -->
	<delete id="deleteComment" parameterType="int">
		UPDATE UPLOAD_COMM
		   SET STATE = -1
		 WHERE UPLOAD_COMM_NO = #{uploadCommentNo}
	</delete>
	
	<!-- 답글 삽입 (DEPTH와 GROUP_NO가 달라짐) -->
	<insert id="insertReply" parameterType="UploadCommDTO">
		INSERT INTO UPLOAD_COMM
			(UPLOAD_COMM_NO, UPLOAD_NO, COMM_CONTENT, STATE, DEPTH, GROUP_NO, COMM_DATE)
		VALUES
			(UPLOAD_COMM_SEQ.NEXTVAL, #{uploadNo}, #{commContent}, 1, 1, #{groupNo}, SYSDATE)
	</insert>
	
</mapper>