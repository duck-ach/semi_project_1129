<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.semi02.mapper.AdminMapper">
	

	<select id="selectAllUsersCount" resultType="int">
		SELECT COUNT(*)
		  FROM USERS
	</select>
	
	
	<select id="selectAllUsers"  resultType="UserDTO">
		  SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, USER_LEVEL, POINT
		  FROM USERS
		  ORDER BY USER_NO
	</select>
	
	<select id="selectUsersByQuery" parameterType="Map" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, USER_LEVEL, POINT
		  FROM USERS
		 WHERE ${column} LIKE '%' || #{searchText} || '%'
	</select>
	
	<select id="selectUsersByNo" parameterType="int" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, USER_LEVEL, POINT
		  FROM USERS
		 WHERE USER_NO = #{userNo}
	</select>
	
	<delete id="deleteUsers" parameterType="Map">
		DELETE
		  FROM USERS
		 WHERE USER_NO = #{userNo}
	</delete>
	
	<!-- 회원탈퇴2 : RETIRE_USERS 테이블에 추가 -->
	<insert id="insertRetireUser" parameterType="Map">
		INSERT INTO RETIRE_USERS
			(USER_NO, ID, JOIN_DATE, RETIRE_DATE)
		VALUES
			(#{userNo}, #{id}, #{joinDate}, SYSDATE)
	</insert>
	
	<!-- 게시글 수 세기 -->
	
	<select id="selectUploadUserAll" resultType="int">
		SELECT COUNT(*)
  		  FROM UPLOAD L LEFT OUTER JOIN USERS U
	 		ON L.ID = U.ID
	</select>
	
	
	<!-- 휴면처리한 회원 -->
	<select id="selectRemoveAllUsers"  resultType="RetireUserDTO">
		  SELECT USER_NO, ID,JOIN_DATE, RETIRE_DATE
		  FROM RETIRE_USERS
		  ORDER BY USER_NO
	</select>
	
	
	<!-- 휴면처리한 회원  -->
	<select id="selectSleepAllUsers"  resultType="SleepUserDTO">
		  SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE,USER_LEVEL, POINT
		  FROM SLEEP_USERS
		  ORDER BY USER_NO
	</select>

	<!--  
	<select id="selectSleepAllUsers" parameterType="String" resultType="SleepUserDTO">
		SELECT ID, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE
		  FROM SLEEP_USERS
		 WHERE ID = #{id}
	</select>
	-->
	
	<!-- 휴면처리한 회원 2 : SLEEP_USERS 테이블에 추가 -->

	<insert id="insertSleepAllUsers" parameterType="Map">
		INSERT INTO SLEEP_USERS
			(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE,USER_LEVEL, POINT)
		VALUES
			(#{userNo}, #{id}, #{joinDate}, SYSDATE)
	</insert>
	
	
	<!-- 
	<insert id="insertSleepAllUsers">
		INSERT INTO SLEEP_USERS(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE, USER_LEVEL, POINT)
			(SELECT U.USER_NO, U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.MOBILE, U.BIRTHYEAR, U.BIRTHDAY, U.POSTCODE, U.ROAD_ADDRESS, U.JIBUN_ADDRESS, U.DETAIL_ADDRESS, U.EXTRA_ADDRESS, U.AGREE_CODE, U.SNS_TYPE, U.JOIN_DATE, A.LAST_LOGIN_DATE, SYSDATE, U.USER_LEVEL, U.POINT
			   FROM USERS U LEFT OUTER JOIN ACCESS_LOG A
			     ON U.ID = A.ID
			  WHERE MONTHS_BETWEEN(SYSDATE, A.LAST_LOGIN_DATE) >= 12
			     OR (MONTHS_BETWEEN(SYSDATE, U.JOIN_DATE) >= 12 AND A.LAST_LOGIN_DATE IS NULL))
	</insert>
	 -->
	
	
</mapper>